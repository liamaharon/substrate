(function() {var implementors = {
"libp2p":[],
"libp2p_core":[],
"libp2p_kad":[["impl&lt;C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;C&gt; for <a class=\"struct\" href=\"libp2p_kad/protocol/struct.KademliaProtocolConfig.html\" title=\"struct libp2p_kad::protocol::KademliaProtocolConfig\">KademliaProtocolConfig</a><span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</span>"]],
"libp2p_noise":[["impl&lt;T, C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt; for <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.XX.html\" title=\"type libp2p_noise::XX\">XX</a>, C&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.XX.html\" title=\"type libp2p_noise::XX\">XX</a>, C&gt;: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>,\n    T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    C: <a class=\"trait\" href=\"libp2p_noise/trait.Protocol.html\" title=\"trait libp2p_noise::Protocol\">Protocol</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.71.1/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"],["impl&lt;T, P, C, R&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt; for <a class=\"struct\" href=\"libp2p_noise/struct.NoiseAuthenticated.html\" title=\"struct libp2p_noise::NoiseAuthenticated\">NoiseAuthenticated</a>&lt;P, C, R&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;P, C, R&gt;: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a> + <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T, Output = (<a class=\"enum\" href=\"libp2p_noise/enum.RemoteIdentity.html\" title=\"enum libp2p_noise::RemoteIdentity\">RemoteIdentity</a>&lt;C&gt;, <a class=\"struct\" href=\"libp2p_noise/struct.Output.html\" title=\"struct libp2p_noise::Output\">Output</a>&lt;T&gt;), Error = <a class=\"enum\" href=\"libp2p_noise/enum.Error.html\" title=\"enum libp2p_noise::Error\">Error</a>&gt; + 'static,\n    &lt;<a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;P, C, R&gt; as <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html#associatedtype.Future\" title=\"type libp2p_core::upgrade::InboundUpgrade::Future\">Future</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    C: <a class=\"trait\" href=\"libp2p_noise/trait.Protocol.html\" title=\"trait libp2p_noise::Protocol\">Protocol</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.71.1/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"],["impl&lt;T, C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt; for <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.IX.html\" title=\"type libp2p_noise::IX\">IX</a>, C&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.IX.html\" title=\"type libp2p_noise::IX\">IX</a>, C&gt;: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>,\n    T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    C: <a class=\"trait\" href=\"libp2p_noise/trait.Protocol.html\" title=\"trait libp2p_noise::Protocol\">Protocol</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.71.1/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"],["impl&lt;T&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt; for <a class=\"struct\" href=\"libp2p_noise/struct.Config.html\" title=\"struct libp2p_noise::Config\">Config</a><span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"],["impl&lt;T, C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;T&gt; for <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.IK.html\" title=\"type libp2p_noise::IK\">IK</a>, C&gt;<span class=\"where fmt-newline\">where\n    <a class=\"struct\" href=\"libp2p_noise/struct.NoiseConfig.html\" title=\"struct libp2p_noise::NoiseConfig\">NoiseConfig</a>&lt;<a class=\"type\" href=\"libp2p_noise/type.IK.html\" title=\"type libp2p_noise::IK\">IK</a>, C&gt;: <a class=\"trait\" href=\"libp2p_core/upgrade/trait.UpgradeInfo.html\" title=\"trait libp2p_core::upgrade::UpgradeInfo\">UpgradeInfo</a>,\n    T: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    C: <a class=\"trait\" href=\"libp2p_noise/trait.Protocol.html\" title=\"trait libp2p_noise::Protocol\">Protocol</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.71.1/std/primitive.u8.html\">u8</a>]&gt; + <a class=\"trait\" href=\"zeroize/trait.Zeroize.html\" title=\"trait zeroize::Zeroize\">Zeroize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"]],
"libp2p_request_response":[["impl&lt;TCodec&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"struct\" href=\"multistream_select/negotiated/struct.Negotiated.html\" title=\"struct multistream_select::negotiated::Negotiated\">Negotiated</a>&lt;<a class=\"struct\" href=\"libp2p_core/muxing/boxed/struct.SubstreamBox.html\" title=\"struct libp2p_core::muxing::boxed::SubstreamBox\">SubstreamBox</a>&gt;&gt; for <a class=\"struct\" href=\"libp2p_request_response/handler/struct.ResponseProtocol.html\" title=\"struct libp2p_request_response::handler::ResponseProtocol\">ResponseProtocol</a>&lt;TCodec&gt;<span class=\"where fmt-newline\">where\n    TCodec: <a class=\"trait\" href=\"libp2p_request_response/codec/trait.Codec.html\" title=\"trait libp2p_request_response::codec::Codec\">Codec</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</span>"]],
"libp2p_swarm":[["impl&lt;T: <a class=\"trait\" href=\"libp2p_swarm/handler/trait.InboundUpgradeSend.html\" title=\"trait libp2p_swarm::handler::InboundUpgradeSend\">InboundUpgradeSend</a>&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;<a class=\"struct\" href=\"multistream_select/negotiated/struct.Negotiated.html\" title=\"struct multistream_select::negotiated::Negotiated\">Negotiated</a>&lt;<a class=\"struct\" href=\"libp2p_core/muxing/boxed/struct.SubstreamBox.html\" title=\"struct libp2p_core::muxing::boxed::SubstreamBox\">SubstreamBox</a>&gt;&gt; for <a class=\"struct\" href=\"libp2p_swarm/handler/struct.SendWrapper.html\" title=\"struct libp2p_swarm::handler::SendWrapper\">SendWrapper</a>&lt;T&gt;"]],
"libp2p_yamux":[["impl&lt;C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;C&gt; for <a class=\"struct\" href=\"libp2p_yamux/struct.LocalConfig.html\" title=\"struct libp2p_yamux::LocalConfig\">LocalConfig</a><span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,</span>"],["impl&lt;C&gt; <a class=\"trait\" href=\"libp2p_core/upgrade/trait.InboundUpgrade.html\" title=\"trait libp2p_core::upgrade::InboundUpgrade\">InboundUpgrade</a>&lt;C&gt; for <a class=\"struct\" href=\"libp2p_yamux/struct.Config.html\" title=\"struct libp2p_yamux::Config\">Config</a><span class=\"where fmt-newline\">where\n    C: <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncRead.html\" title=\"trait futures_io::if_std::AsyncRead\">AsyncRead</a> + <a class=\"trait\" href=\"futures_io/if_std/trait.AsyncWrite.html\" title=\"trait futures_io::if_std::AsyncWrite\">AsyncWrite</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.71.1/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()